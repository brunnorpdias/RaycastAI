import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { CheckpointOut, CheckpointOut$Outbound } from "./checkpointout.js";
import { EventOut, EventOut$Outbound } from "./eventout.js";
import { GithubRepositoryOut, GithubRepositoryOut$Outbound } from "./githubrepositoryout.js";
import { JobMetadataOut, JobMetadataOut$Outbound } from "./jobmetadataout.js";
import { TrainingParameters, TrainingParameters$Outbound } from "./trainingparameters.js";
import { WandbIntegrationOut, WandbIntegrationOut$Outbound } from "./wandbintegrationout.js";
export declare const DetailedJobOutStatus: {
    readonly Queued: "QUEUED";
    readonly Started: "STARTED";
    readonly Validating: "VALIDATING";
    readonly Validated: "VALIDATED";
    readonly Running: "RUNNING";
    readonly FailedValidation: "FAILED_VALIDATION";
    readonly Failed: "FAILED";
    readonly Success: "SUCCESS";
    readonly Cancelled: "CANCELLED";
    readonly CancellationRequested: "CANCELLATION_REQUESTED";
};
export type DetailedJobOutStatus = ClosedEnum<typeof DetailedJobOutStatus>;
export declare const DetailedJobOutObject: {
    readonly Job: "job";
};
export type DetailedJobOutObject = ClosedEnum<typeof DetailedJobOutObject>;
export type DetailedJobOutIntegrations = WandbIntegrationOut;
export type DetailedJobOutRepositories = GithubRepositoryOut;
export type DetailedJobOut = {
    id: string;
    autoStart: boolean;
    hyperparameters: TrainingParameters;
    /**
     * The name of the model to fine-tune.
     */
    model: string;
    status: DetailedJobOutStatus;
    jobType: string;
    createdAt: number;
    modifiedAt: number;
    trainingFiles: Array<string>;
    validationFiles?: Array<string> | null | undefined;
    object?: "job" | undefined;
    fineTunedModel?: string | null | undefined;
    suffix?: string | null | undefined;
    integrations?: Array<WandbIntegrationOut> | null | undefined;
    trainedTokens?: number | null | undefined;
    repositories?: Array<GithubRepositoryOut> | undefined;
    metadata?: JobMetadataOut | null | undefined;
    /**
     * Event items are created every time the status of a fine-tuning job changes. The timestamped list of all events is accessible here.
     */
    events?: Array<EventOut> | undefined;
    checkpoints?: Array<CheckpointOut> | undefined;
};
/** @internal */
export declare const DetailedJobOutStatus$inboundSchema: z.ZodNativeEnum<typeof DetailedJobOutStatus>;
/** @internal */
export declare const DetailedJobOutStatus$outboundSchema: z.ZodNativeEnum<typeof DetailedJobOutStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DetailedJobOutStatus$ {
    /** @deprecated use `DetailedJobOutStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Queued: "QUEUED";
        readonly Started: "STARTED";
        readonly Validating: "VALIDATING";
        readonly Validated: "VALIDATED";
        readonly Running: "RUNNING";
        readonly FailedValidation: "FAILED_VALIDATION";
        readonly Failed: "FAILED";
        readonly Success: "SUCCESS";
        readonly Cancelled: "CANCELLED";
        readonly CancellationRequested: "CANCELLATION_REQUESTED";
    }>;
    /** @deprecated use `DetailedJobOutStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Queued: "QUEUED";
        readonly Started: "STARTED";
        readonly Validating: "VALIDATING";
        readonly Validated: "VALIDATED";
        readonly Running: "RUNNING";
        readonly FailedValidation: "FAILED_VALIDATION";
        readonly Failed: "FAILED";
        readonly Success: "SUCCESS";
        readonly Cancelled: "CANCELLED";
        readonly CancellationRequested: "CANCELLATION_REQUESTED";
    }>;
}
/** @internal */
export declare const DetailedJobOutObject$inboundSchema: z.ZodNativeEnum<typeof DetailedJobOutObject>;
/** @internal */
export declare const DetailedJobOutObject$outboundSchema: z.ZodNativeEnum<typeof DetailedJobOutObject>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DetailedJobOutObject$ {
    /** @deprecated use `DetailedJobOutObject$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Job: "job";
    }>;
    /** @deprecated use `DetailedJobOutObject$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Job: "job";
    }>;
}
/** @internal */
export declare const DetailedJobOutIntegrations$inboundSchema: z.ZodType<DetailedJobOutIntegrations, z.ZodTypeDef, unknown>;
/** @internal */
export type DetailedJobOutIntegrations$Outbound = WandbIntegrationOut$Outbound;
/** @internal */
export declare const DetailedJobOutIntegrations$outboundSchema: z.ZodType<DetailedJobOutIntegrations$Outbound, z.ZodTypeDef, DetailedJobOutIntegrations>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DetailedJobOutIntegrations$ {
    /** @deprecated use `DetailedJobOutIntegrations$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WandbIntegrationOut, z.ZodTypeDef, unknown>;
    /** @deprecated use `DetailedJobOutIntegrations$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WandbIntegrationOut$Outbound, z.ZodTypeDef, WandbIntegrationOut>;
    /** @deprecated use `DetailedJobOutIntegrations$Outbound` instead. */
    type Outbound = DetailedJobOutIntegrations$Outbound;
}
export declare function detailedJobOutIntegrationsToJSON(detailedJobOutIntegrations: DetailedJobOutIntegrations): string;
export declare function detailedJobOutIntegrationsFromJSON(jsonString: string): SafeParseResult<DetailedJobOutIntegrations, SDKValidationError>;
/** @internal */
export declare const DetailedJobOutRepositories$inboundSchema: z.ZodType<DetailedJobOutRepositories, z.ZodTypeDef, unknown>;
/** @internal */
export type DetailedJobOutRepositories$Outbound = GithubRepositoryOut$Outbound;
/** @internal */
export declare const DetailedJobOutRepositories$outboundSchema: z.ZodType<DetailedJobOutRepositories$Outbound, z.ZodTypeDef, DetailedJobOutRepositories>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DetailedJobOutRepositories$ {
    /** @deprecated use `DetailedJobOutRepositories$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GithubRepositoryOut, z.ZodTypeDef, unknown>;
    /** @deprecated use `DetailedJobOutRepositories$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GithubRepositoryOut$Outbound, z.ZodTypeDef, GithubRepositoryOut>;
    /** @deprecated use `DetailedJobOutRepositories$Outbound` instead. */
    type Outbound = DetailedJobOutRepositories$Outbound;
}
export declare function detailedJobOutRepositoriesToJSON(detailedJobOutRepositories: DetailedJobOutRepositories): string;
export declare function detailedJobOutRepositoriesFromJSON(jsonString: string): SafeParseResult<DetailedJobOutRepositories, SDKValidationError>;
/** @internal */
export declare const DetailedJobOut$inboundSchema: z.ZodType<DetailedJobOut, z.ZodTypeDef, unknown>;
/** @internal */
export type DetailedJobOut$Outbound = {
    id: string;
    auto_start: boolean;
    hyperparameters: TrainingParameters$Outbound;
    model: string;
    status: string;
    job_type: string;
    created_at: number;
    modified_at: number;
    training_files: Array<string>;
    validation_files?: Array<string> | null | undefined;
    object: "job";
    fine_tuned_model?: string | null | undefined;
    suffix?: string | null | undefined;
    integrations?: Array<WandbIntegrationOut$Outbound> | null | undefined;
    trained_tokens?: number | null | undefined;
    repositories?: Array<GithubRepositoryOut$Outbound> | undefined;
    metadata?: JobMetadataOut$Outbound | null | undefined;
    events?: Array<EventOut$Outbound> | undefined;
    checkpoints?: Array<CheckpointOut$Outbound> | undefined;
};
/** @internal */
export declare const DetailedJobOut$outboundSchema: z.ZodType<DetailedJobOut$Outbound, z.ZodTypeDef, DetailedJobOut>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DetailedJobOut$ {
    /** @deprecated use `DetailedJobOut$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DetailedJobOut, z.ZodTypeDef, unknown>;
    /** @deprecated use `DetailedJobOut$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DetailedJobOut$Outbound, z.ZodTypeDef, DetailedJobOut>;
    /** @deprecated use `DetailedJobOut$Outbound` instead. */
    type Outbound = DetailedJobOut$Outbound;
}
export declare function detailedJobOutToJSON(detailedJobOut: DetailedJobOut): string;
export declare function detailedJobOutFromJSON(jsonString: string): SafeParseResult<DetailedJobOut, SDKValidationError>;
//# sourceMappingURL=detailedjobout.d.ts.map