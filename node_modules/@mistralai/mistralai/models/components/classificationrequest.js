"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClassificationRequest$ = exports.ClassificationRequest$outboundSchema = exports.ClassificationRequest$inboundSchema = exports.ClassificationRequestInputs$ = exports.ClassificationRequestInputs$outboundSchema = exports.ClassificationRequestInputs$inboundSchema = void 0;
exports.classificationRequestInputsToJSON = classificationRequestInputsToJSON;
exports.classificationRequestInputsFromJSON = classificationRequestInputsFromJSON;
exports.classificationRequestToJSON = classificationRequestToJSON;
exports.classificationRequestFromJSON = classificationRequestFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/** @internal */
exports.ClassificationRequestInputs$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.ClassificationRequestInputs$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ClassificationRequestInputs$;
(function (ClassificationRequestInputs$) {
    /** @deprecated use `ClassificationRequestInputs$inboundSchema` instead. */
    ClassificationRequestInputs$.inboundSchema = exports.ClassificationRequestInputs$inboundSchema;
    /** @deprecated use `ClassificationRequestInputs$outboundSchema` instead. */
    ClassificationRequestInputs$.outboundSchema = exports.ClassificationRequestInputs$outboundSchema;
})(ClassificationRequestInputs$ || (exports.ClassificationRequestInputs$ = ClassificationRequestInputs$ = {}));
function classificationRequestInputsToJSON(classificationRequestInputs) {
    return JSON.stringify(exports.ClassificationRequestInputs$outboundSchema.parse(classificationRequestInputs));
}
function classificationRequestInputsFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ClassificationRequestInputs$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ClassificationRequestInputs' from JSON`);
}
/** @internal */
exports.ClassificationRequest$inboundSchema = z.object({
    model: z.string(),
    input: z.union([z.string(), z.array(z.string())]),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "input": "inputs",
    });
});
/** @internal */
exports.ClassificationRequest$outboundSchema = z.object({
    model: z.string(),
    inputs: z.union([z.string(), z.array(z.string())]),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        inputs: "input",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ClassificationRequest$;
(function (ClassificationRequest$) {
    /** @deprecated use `ClassificationRequest$inboundSchema` instead. */
    ClassificationRequest$.inboundSchema = exports.ClassificationRequest$inboundSchema;
    /** @deprecated use `ClassificationRequest$outboundSchema` instead. */
    ClassificationRequest$.outboundSchema = exports.ClassificationRequest$outboundSchema;
})(ClassificationRequest$ || (exports.ClassificationRequest$ = ClassificationRequest$ = {}));
function classificationRequestToJSON(classificationRequest) {
    return JSON.stringify(exports.ClassificationRequest$outboundSchema.parse(classificationRequest));
}
function classificationRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ClassificationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ClassificationRequest' from JSON`);
}
//# sourceMappingURL=classificationrequest.js.map