"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FTModelOut$ = exports.FTModelOut$outboundSchema = exports.FTModelOut$inboundSchema = exports.FTModelOutObject$ = exports.FTModelOutObject$outboundSchema = exports.FTModelOutObject$inboundSchema = exports.FTModelOutObject = void 0;
exports.ftModelOutToJSON = ftModelOutToJSON;
exports.ftModelOutFromJSON = ftModelOutFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const ftmodelcapabilitiesout_js_1 = require("./ftmodelcapabilitiesout.js");
exports.FTModelOutObject = {
    Model: "model",
};
/** @internal */
exports.FTModelOutObject$inboundSchema = z.nativeEnum(exports.FTModelOutObject);
/** @internal */
exports.FTModelOutObject$outboundSchema = exports.FTModelOutObject$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FTModelOutObject$;
(function (FTModelOutObject$) {
    /** @deprecated use `FTModelOutObject$inboundSchema` instead. */
    FTModelOutObject$.inboundSchema = exports.FTModelOutObject$inboundSchema;
    /** @deprecated use `FTModelOutObject$outboundSchema` instead. */
    FTModelOutObject$.outboundSchema = exports.FTModelOutObject$outboundSchema;
})(FTModelOutObject$ || (exports.FTModelOutObject$ = FTModelOutObject$ = {}));
/** @internal */
exports.FTModelOut$inboundSchema = z.object({
    id: z.string(),
    object: z.literal("model").default("model"),
    created: z.number().int(),
    owned_by: z.string(),
    root: z.string(),
    archived: z.boolean(),
    name: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    capabilities: ftmodelcapabilitiesout_js_1.FTModelCapabilitiesOut$inboundSchema,
    max_context_length: z.number().int().default(32768),
    aliases: z.array(z.string()).optional(),
    job: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "owned_by": "ownedBy",
        "max_context_length": "maxContextLength",
    });
});
/** @internal */
exports.FTModelOut$outboundSchema = z.object({
    id: z.string(),
    object: z.literal("model").default("model"),
    created: z.number().int(),
    ownedBy: z.string(),
    root: z.string(),
    archived: z.boolean(),
    name: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    capabilities: ftmodelcapabilitiesout_js_1.FTModelCapabilitiesOut$outboundSchema,
    maxContextLength: z.number().int().default(32768),
    aliases: z.array(z.string()).optional(),
    job: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        ownedBy: "owned_by",
        maxContextLength: "max_context_length",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FTModelOut$;
(function (FTModelOut$) {
    /** @deprecated use `FTModelOut$inboundSchema` instead. */
    FTModelOut$.inboundSchema = exports.FTModelOut$inboundSchema;
    /** @deprecated use `FTModelOut$outboundSchema` instead. */
    FTModelOut$.outboundSchema = exports.FTModelOut$outboundSchema;
})(FTModelOut$ || (exports.FTModelOut$ = FTModelOut$ = {}));
function ftModelOutToJSON(ftModelOut) {
    return JSON.stringify(exports.FTModelOut$outboundSchema.parse(ftModelOut));
}
function ftModelOutFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FTModelOut$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FTModelOut' from JSON`);
}
//# sourceMappingURL=ftmodelout.js.map